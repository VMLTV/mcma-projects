{
    "Comment": "AI Workflow",
    "StartAt": "001-validate-workflow-input",
    "States": {
        "001-validate-workflow-input": {
            "Type": "Task",
            "Resource": "${lambda-001-validate-workflow-input}",
            "ResultPath": "$.data.mediaFileLocator",
            "Next": "002-ai-extraction-parent",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "ResultPath": "$.error",
                    "Next": "Process-Failure"
                }
            ]
        },
        "002-ai-extraction-parent": {
            "Type": "Parallel",
            "Branches": [
                {
                    "StartAt": "101-extract-speech-to-text-parent",
                    "States": {
                        "101-extract-speech-to-text-parent": {
                            "Type": "Parallel",
                            "Branches": [
                                {
                                    "StartAt": "101-extract-speech-to-text",
                                    "States": {
                                        "101-extract-speech-to-text": {
                                            "Type": "Task",
                                            "Resource": "${lambda-101-extract-speech-to-text}",
                                            "End": true
                                        }
                                    }
                                },
                                {
                                    "StartAt": "101-wait-for-job-completion",
                                    "States": {
                                        "101-wait-for-job-completion": {
                                            "Type": "Task",
                                            "Resource": "${activity-101-extract-speech-to-text}",
                                            "TimeoutSeconds": 1800,
                                            "End": true
                                        }
                                    }
                                }
                            ],
                            "ResultPath": "$.data.transcribeJobId",
                            "Next": "102-register-speech-to-text-output",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "ResultPath": "$.error",
                                    "Next": "100-process-failure"
                                }
                            ]
                        },
                        "102-register-speech-to-text-output": {
                            "Type": "Task",
                            "Resource": "${lambda-102-register-speech-to-text-output}",
                            "ResultPath": null,
                            "Next": "103-validate-speech-to-text-parent",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "ResultPath": "$.error",
                                    "Next": "100-process-failure"
                                }
                            ]
                        },
                        "103-validate-speech-to-text-parent": {
                            "Type": "Parallel",
                            "Branches": [
                                {
                                    "StartAt": "103-validate-speech-to-text",
                                    "States": {
                                        "103-validate-speech-to-text": {
                                            "Type": "Task",
                                            "Resource": "${lambda-103-validate-speech-to-text}",
                                            "End": true
                                        }
                                    }
                                },
                                {
                                    "StartAt": "103-wait-for-job-completion",
                                    "States": {
                                        "103-wait-for-job-completion": {
                                            "Type": "Task",
                                            "Resource": "${activity-103-validate-speech-to-text}",
                                            "TimeoutSeconds": 900,
                                            "End": true
                                        }
                                    }
                                }
                            ],
                            "ResultPath": "$.data.validateSpeechToTextJobId",
                            "Next": "104-register-validate-speech-to-text",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "ResultPath": "$.error",
                                    "Next": "100-process-failure"
                                }
                            ]
                        },
                        "104-register-validate-speech-to-text": {
                            "Type": "Task",
                            "Resource": "${lambda-104-register-validate-speech-to-text}",
                            "ResultPath": null,
                            "Next": "105-translate-speech-transcription-parent",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "ResultPath": "$.error",
                                    "Next": "100-process-failure"
                                }
                            ]
                        },
                        "105-translate-speech-transcription-parent": {
                            "Type": "Parallel",
                            "Branches": [
                                {
                                    "StartAt": "105-translate-speech-transcription",
                                    "States": {
                                        "105-translate-speech-transcription": {
                                            "Type": "Task",
                                            "Resource": "${lambda-105-translate-speech-transcription}",
                                            "End": true
                                        }
                                    }
                                },
                                {
                                    "StartAt": "105-wait-for-job-completion",
                                    "States": {
                                        "105-wait-for-job-completion": {
                                            "Type": "Task",
                                            "Resource": "${activity-105-translate-speech-transcription}",
                                            "TimeoutSeconds": 900,
                                            "End": true
                                        }
                                    }
                                }
                            ],
                            "ResultPath": "$.data.translateJobId",
                            "Next": "106-register-speech-translation",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "ResultPath": "$.error",
                                    "Next": "100-process-failure"
                                }
                            ]
                        },
                        "106-register-speech-translation": {
                            "Type": "Task",
                            "Resource": "${lambda-106-register-speech-translation}",
                            "ResultPath": null,
                            "Next": "107-tokenized-translation-to-speech-parent",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "ResultPath": "$.error",
                                    "Next": "100-process-failure"
                                }
                            ]
                        },
                        "107-tokenized-translation-to-speech-parent": {
                            "Type": "Parallel",
                            "Branches": [
                                {
                                    "StartAt": "107-tokenized-translation-to-speech",
                                    "States": {
                                        "107-tokenized-translation-to-speech": {
                                            "Type": "Task",
                                            "Resource": "${lambda-107-tokenized-translation-to-speech}",
                                            "End": true
                                        }
                                    }
                                },
                                {
                                    "StartAt": "107-wait-for-job-completion",
                                    "States": {
                                        "107-wait-for-job-completion": {
                                            "Type": "Task",
                                            "Resource": "${activity-107-tokenized-translation-to-speech}",
                                            "TimeoutSeconds": 900,
                                            "End": true
                                        }
                                    }
                                }
                            ],
                            "ResultPath": "$.data.tokenizedTextToSpeechJobId",
                            "Next": "108-register-tokenized-translation-to-speech",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "ResultPath": "$.error",
                                    "Next": "100-process-failure"
                                }
                            ]
                        },
                        "108-register-tokenized-translation-to-speech": {
                            "Type": "Task",
                            "Resource": "${lambda-108-register-tokenized-translation-to-speech}",
                            "ResultPath": null,
                            "Next": "109-ssml-translation-to-speech-parent",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "ResultPath": "$.error",
                                    "Next": "100-process-failure"
                                }
                            ]
                        },
                        "109-ssml-translation-to-speech-parent": {
                            "Type": "Parallel",
                            "Branches": [
                                {
                                    "StartAt": "109-ssml-translation-to-speech",
                                    "States": {
                                        "109-ssml-translation-to-speech": {
                                            "Type": "Task",
                                            "Resource": "${lambda-109-ssml-translation-to-speech}",
                                            "End": true
                                        }
                                    }
                                },
                                {
                                    "StartAt": "109-wait-for-job-completion",
                                    "States": {
                                        "109-wait-for-job-completion": {
                                            "Type": "Task",
                                            "Resource": "${activity-109-ssml-translation-to-speech}",
                                            "TimeoutSeconds": 900,
                                            "End": true
                                        }
                                    }
                                }
                            ],
                            "ResultPath": "$.data.ssmlTextToSpeechJobId",
                            "Next": "110-register-ssml-translation-to-speech",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "ResultPath": "$.error",
                                    "Next": "100-process-failure"
                                }
                            ]
                        },
                        "110-register-ssml-translation-to-speech": {
                            "Type": "Task",
                            "Resource": "${lambda-110-register-ssml-translation-to-speech}",
                            "ResultPath": null,
                            "Next": "111-dubbing-srt-parent",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "ResultPath": "$.error",
                                    "Next": "100-process-failure"
                                }
                            ]
                        },
                        "111-dubbing-srt-parent": {
                            "Type": "Parallel",
                            "Branches": [
                                {
                                    "StartAt": "111-dubbing-srt",
                                    "States": {
                                        "111-dubbing-srt": {
                                            "Type": "Task",
                                            "Resource": "${lambda-111-dubbing-srt}",
                                            "End": true
                                        }
                                    }
                                },
                                {
                                    "StartAt": "111-wait-for-job-completion",
                                    "States": {
                                        "111-wait-for-job-completion": {
                                            "Type": "Task",
                                            "Resource": "${activity-111-dubbing-srt}",
                                            "TimeoutSeconds": 900,
                                            "End": true
                                        }
                                    }
                                }
                            ],
                            "ResultPath": "$.data.dubbingSrtJobId",
                            "Next": "112-register-dubbing-srt",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "ResultPath": "$.error",
                                    "Next": "100-process-failure"
                                }
                            ]
                        },
                        "112-register-dubbing-srt": {
                            "Type": "Task",
                            "Resource": "${lambda-112-register-dubbing-srt}",
                            "ResultPath": null,
                            "Next": "100-process-completion",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "ResultPath": "$.error",
                                    "Next": "100-process-failure"
                                }
                            ]
                        },
                        "100-process-failure": {
                            "Type": "Pass",
                            "End": true
                        },
                        "100-process-completion": {
                            "Type": "Pass",
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "201-detect-celebrities-azure-parent",
                    "States": {
                        "201-detect-celebrities-azure-parent": {
                            "Type": "Parallel",
                            "Branches": [
                                {
                                    "StartAt": "201-detect-celebrities-azure",
                                    "States": {
                                        "201-detect-celebrities-azure": {
                                            "Type": "Task",
                                            "Resource": "${lambda-201-detect-celebrities-azure}",
                                            "End": true
                                        }
                                    }
                                },
                                {
                                    "StartAt": "201-wait-for-job-completion",
                                    "States": {
                                        "201-wait-for-job-completion": {
                                            "Type": "Task",
                                            "Resource": "${activity-201-detect-celebrities-azure}",
                                            "TimeoutSeconds": 1800,
                                            "End": true
                                        }
                                    }
                                }
                            ],
                            "ResultPath": "$.data.azureCelebritiesJobId",
                            "Next": "202-register-celebrities-info-azure",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "ResultPath": "$.error",
                                    "Next": "200-process-failure"
                                }
                            ]
                        },
                        "202-register-celebrities-info-azure": {
                            "Type": "Task",
                            "Resource": "${lambda-202-register-celebrities-info-azure}",
                            "ResultPath": null,
                            "Next": "203-validate-speech-to-text-parent-azure",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "ResultPath": "$.error",
                                    "Next": "200-process-failure"
                                }
                            ]
                        },
                        "203-validate-speech-to-text-parent-azure": {
                            "Type": "Parallel",
                            "Branches": [
                                {
                                    "StartAt": "203-validate-speech-to-text-azure",
                                    "States": {
                                        "203-validate-speech-to-text-azure": {
                                            "Type": "Task",
                                            "Resource": "${lambda-203-validate-speech-to-text-azure}",
                                            "End": true
                                        }
                                    }
                                },
                                {
                                    "StartAt": "203-wait-for-job-completion",
                                    "States": {
                                        "203-wait-for-job-completion": {
                                            "Type": "Task",
                                            "Resource": "${activity-203-validate-speech-to-text-azure}",
                                            "TimeoutSeconds": 900,
                                            "End": true
                                        }
                                    }
                                }
                            ],
                            "ResultPath": "$.data.validateSpeechToTextAzureJobId",
                            "Next": "204-register-validate-speech-to-text-azure",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "ResultPath": "$.error",
                                    "Next": "200-process-failure"
                                }
                            ]
                        },
                        "204-register-validate-speech-to-text-azure": {
                            "Type": "Task",
                            "Resource": "${lambda-204-register-validate-speech-to-text-azure}",
                            "ResultPath": null,
                            "Next": "200-process-completion",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "ResultPath": "$.error",
                                    "Next": "200-process-failure"
                                }
                            ]
                        },
                        "200-process-failure": {
                            "Type": "Pass",
                            "End": true
                        },
                        "200-process-completion": {
                            "Type": "Pass",
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "300-rekognition-aws",
                    "States": {
                        "300-rekognition-aws": {
                            "Type": "Parallel",
                            "Branches": [
                                {
                                    "StartAt": "301-detect-celebrities-aws-parent",
                                    "States": {
                                        "301-detect-celebrities-aws-parent": {
                                            "Type": "Parallel",
                                            "Branches": [
                                                {
                                                    "StartAt": "301-detect-celebrities-aws",
                                                    "States": {
                                                        "301-detect-celebrities-aws": {
                                                            "Type": "Task",
                                                            "Resource": "${lambda-301-detect-celebrities-aws}",
                                                            "End": true
                                                        }
                                                    }
                                                },
                                                {
                                                    "StartAt": "301-wait-for-job-completion",
                                                    "States": {
                                                        "301-wait-for-job-completion": {
                                                            "Type": "Task",
                                                            "Resource": "${activity-301-detect-celebrities-aws}",
                                                            "TimeoutSeconds": 1800,
                                                            "End": true
                                                        }
                                                    }
                                                }
                                            ],
                                            "ResultPath": "$.data.awsCelebritiesJobId",
                                            "Next": "302-register-celebrities-info-aws",
                                            "Catch": [
                                                {
                                                    "ErrorEquals": [
                                                        "States.ALL"
                                                    ],
                                                    "ResultPath": "$.error",
                                                    "Next": "301-process-failure"
                                                }
                                            ]
                                        },
                                        "302-register-celebrities-info-aws": {
                                            "Type": "Task",
                                            "Resource": "${lambda-302-register-celebrities-info-aws}",
                                            "ResultPath": null,
                                            "Next": "301-process-completion",
                                            "Catch": [
                                                {
                                                    "ErrorEquals": [
                                                        "States.ALL"
                                                    ],
                                                    "ResultPath": "$.error",
                                                    "Next": "301-process-failure"
                                                }
                                            ]
                                        },
                                        "301-process-failure": {
                                            "Type": "Pass",
                                            "End": true
                                        },
                                        "301-process-completion": {
                                            "Type": "Pass",
                                            "End": true
                                        }
                                    }
                                },
                                {
                                    "StartAt": "311-detect-emotions-aws-parent",
                                    "States": {
                                        "311-detect-emotions-aws-parent": {
                                            "Type": "Parallel",
                                            "Branches": [
                                                {
                                                    "StartAt": "311-detect-emotions-aws",
                                                    "States": {
                                                        "311-detect-emotions-aws": {
                                                            "Type": "Task",
                                                            "Resource": "${lambda-311-detect-emotions-aws}",
                                                            "End": true
                                                        }
                                                    }
                                                },
                                                {
                                                    "StartAt": "311-wait-for-job-completion",
                                                    "States": {
                                                        "311-wait-for-job-completion": {
                                                            "Type": "Task",
                                                            "Resource": "${activity-311-detect-emotions-aws}",
                                                            "TimeoutSeconds": 1800,
                                                            "End": true
                                                        }
                                                    }
                                                }
                                            ],
                                            "ResultPath": "$.data.awsEmotionsJobId",
                                            "Next": "312-register-emotions-info-aws",
                                            "Catch": [
                                                {
                                                    "ErrorEquals": [
                                                        "States.ALL"
                                                    ],
                                                    "ResultPath": "$.error",
                                                    "Next": "311-process-failure"
                                                }
                                            ]
                                        },
                                        "312-register-emotions-info-aws": {
                                            "Type": "Task",
                                            "Resource": "${lambda-312-register-emotions-info-aws}",
                                            "ResultPath": null,
                                            "Next": "311-process-completion",
                                            "Catch": [
                                                {
                                                    "ErrorEquals": [
                                                        "States.ALL"
                                                    ],
                                                    "ResultPath": "$.error",
                                                    "Next": "311-process-failure"
                                                }
                                            ]
                                        },
                                        "311-process-failure": {
                                            "Type": "Pass",
                                            "End": true
                                        },
                                        "311-process-completion": {
                                            "Type": "Pass",
                                            "End": true
                                        }
                                    }
                                }
                            ],
                            "ResultPath": "$.data.awsRekognition",
                            "Next": "321-process-rekognition-aws",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "ResultPath": "$.error",
                                    "Next": "300-rekognition-aws-failure"
                                }
                            ]
                        },
                        "321-process-rekognition-aws": {
                            "Type": "Task",
                            "Resource": "${lambda-321-rekognition-aws}",
                            "ResultPath": null,
                            "Next": "300-rekognition-aws-completion",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "ResultPath": "$.error",
                                    "Next": "300-rekognition-aws-failure"
                                }
                            ]
                        },
                        "300-rekognition-aws-failure": {
                            "Type": "Pass",
                            "End": true
                        },
                        "300-rekognition-aws-completion": {
                            "Type": "Pass",
                            "End": true
                        }
                    }
                },
                {
                    "StartAt": "401-extract-audio-google-parent",
                    "States": {
                        "401-extract-audio-google-parent": {
                            "Type": "Parallel",
                            "Branches": [
                                {
                                    "StartAt": "401-extract-audio-google",
                                    "States": {
                                        "401-extract-audio-google": {
                                            "Type": "Task",
                                            "Resource": "${lambda-401-extract-audio-google}",
                                            "End": true
                                        }
                                    }
                                },
                                {
                                    "StartAt": "401-wait-for-job-completion",
                                    "States": {
                                        "401-wait-for-job-completion": {
                                            "Type": "Task",
                                            "Resource": "${activity-401-extract-audio-google}",
                                            "TimeoutSeconds": 900,
                                            "End": true
                                        }
                                    }
                                }
                            ],
                            "ResultPath": "$.data.extractAudioJobId",
                            "Next": "402-register-extract-audio-google",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "ResultPath": "$.error",
                                    "Next": "400-process-failure"
                                }
                            ]
                        },
                        "402-register-extract-audio-google": {
                            "Type": "Task",
                            "Resource": "${lambda-402-register-extract-audio-google}",
                            "ResultPath": "$.data.audioFileLocator",
                            "Next": "403-speech-to-text-parent-google",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "ResultPath": "$.error",
                                    "Next": "400-process-failure"
                                }
                            ]
                        },
                        "403-speech-to-text-parent-google": {
                            "Type": "Parallel",
                            "Branches": [
                                {
                                    "StartAt": "403-speech-to-text-google",
                                    "States": {
                                        "403-speech-to-text-google": {
                                            "Type": "Task",
                                            "Resource": "${lambda-403-speech-to-text-google}",
                                            "End": true
                                        }
                                    }
                                },
                                {
                                    "StartAt": "403-wait-for-job-completion",
                                    "States": {
                                        "403-wait-for-job-completion": {
                                            "Type": "Task",
                                            "Resource": "${activity-403-speech-to-text-google}",
                                            "TimeoutSeconds": 900,
                                            "End": true
                                        }
                                    }
                                }
                            ],
                            "ResultPath": "$.data.speechToTextGoogleJobId",
                            "Next": "404-register-speech-to-text-google",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "ResultPath": "$.error",
                                    "Next": "400-process-failure"
                                }
                            ]
                        },
                        "404-register-speech-to-text-google": {
                            "Type": "Task",
                            "Resource": "${lambda-404-register-speech-to-text-google}",
                            "ResultPath": null,
                            "Next": "405-validate-speech-to-text-parent-google",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "ResultPath": "$.error",
                                    "Next": "400-process-failure"
                                }
                            ]
                        },
                        "405-validate-speech-to-text-parent-google": {
                            "Type": "Parallel",
                            "Branches": [
                                {
                                    "StartAt": "405-validate-speech-to-text-google",
                                    "States": {
                                        "405-validate-speech-to-text-google": {
                                            "Type": "Task",
                                            "Resource": "${lambda-405-validate-speech-to-text-google}",
                                            "End": true
                                        }
                                    }
                                },
                                {
                                    "StartAt": "405-wait-for-job-completion",
                                    "States": {
                                        "405-wait-for-job-completion": {
                                            "Type": "Task",
                                            "Resource": "${activity-405-validate-speech-to-text-google}",
                                            "TimeoutSeconds": 900,
                                            "End": true
                                        }
                                    }
                                }
                            ],
                            "ResultPath": "$.data.validateSpeechToTextGoogleJobId",
                            "Next": "406-register-validate-speech-to-text-google",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "ResultPath": "$.error",
                                    "Next": "400-process-failure"
                                }
                            ]
                        },
                        "406-register-validate-speech-to-text-google": {
                            "Type": "Task",
                            "Resource": "${lambda-406-register-validate-speech-to-text-google}",
                            "ResultPath": null,
                            "Next": "400-process-completion",
                            "Catch": [
                                {
                                    "ErrorEquals": [
                                        "States.ALL"
                                    ],
                                    "ResultPath": "$.error",
                                    "Next": "400-process-failure"
                                }
                            ]
                        },
                        "400-process-failure": {
                            "Type": "Pass",
                            "End": true
                        },
                        "400-process-completion": {
                            "Type": "Pass",
                            "End": true
                        }
                    }
                }
            ],
            "ResultPath": null,
            "Next": "Process-Completion",
            "Catch": [
                {
                    "ErrorEquals": [
                        "States.ALL"
                    ],
                    "ResultPath": "$.error",
                    "Next": "Process-Failure"
                }
            ]
        },
        "Process-Completion": {
            "Type": "Task",
            "Resource": "${lambda-process-workflow-completion}",
            "ResultPath": null,
            "Next": "Completed"
        },
        "Process-Failure": {
            "Type": "Task",
            "Resource": "${lambda-process-workflow-failure}",
            "ResultPath": null,
            "Next": "Failed"
        },
        "Failed": {
            "Type": "Fail"
        },
        "Completed": {
            "Type": "Succeed"
        }
    }
}
